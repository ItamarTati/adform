{"version":3,"sources":["Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["query","gql","Main","useQuery","data","loading","error","console","log","client","ApolloClient","uri","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAKMA,EAAQC,YAAH,6KAyBMC,EAbQ,WAAO,IAAD,EACMC,mBAASH,GAAlBI,GADG,EACnBC,QADmB,EACVC,MADU,EACHF,MAGxB,OACE,uCAEKG,QAAQC,IAAIJ,OCjBjBK,EAAc,I,MAAIC,GAAa,CACnCC,IAAK,uCAaQC,MAVf,WACE,OACE,cAAC,iBAAD,CAAgBH,OAASA,EAAzB,SACE,cAAC,EAAD,OCASI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c46a97e.chunk.js","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\n\nconst query = gql`{\n    allPlanets {\n      planets{\n        name\n        population\n        diameter\n        gravity\n        climates\n      }\n    }    \n  }`;\n  \n  const Main: React.FC = () => {\n    const { loading, error, data } = useQuery(query);\n    // if (loading) return 'Loading';\n    // if (error) return 'Error'\n    return (\n      <div>\n          data\n          {console.log(data)}\n      </div>\n    );\n  }\n  \n  \n  export default Main\n  ","import React from 'react';\nimport './App.css';\nimport Main from './Main';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n\nconst client: any = new ApolloClient({\n  uri: \"https://graphql.org/swapi-graphql/\"\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client ={client}>\n      <Main />\n    </ApolloProvider>\n\n  \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}