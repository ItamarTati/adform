{"version":3,"sources":["SearchName.ts","FilterPopulation.ts","Background.ts","PlanetCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchName","searchString","planets","pattern","RegExp","toLowerCase","filter","planet","test","name","FilterPopulation","min","max","population","background","PlanetCard","props","useState","counter","setCounter","useEffect","id","setTimeout","length","document","body","style","backgroundAttachment","clearTimeout","className","src","alt","toString","replace","climates","map","climate","diameter","gravity","App","setPlanets","moreKnown","setMoreKnown","moreUnknown","setMoreUnknown","setMin","setMax","setSearchString","fetch","method","headers","JSON","stringify","query","then","res","json","data","allPlanets","catch","error","TextField","label","type","onChange","event","target","value","parseInt","InputLabelProps","shrink","splice","Button","variant","color","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd8a933f.chunk.js","sourcesContent":["import { Planet } from './PlanetInterface';\n\nexport default function SearchName(searchString: string, planets: Planet[]): Planet[] {\n    var pattern = new RegExp(searchString.toLowerCase());\n    return planets.filter((planet) => pattern.test(planet.name.toLowerCase()))\n}","import { Planet } from './PlanetInterface';\n\n\nexport default function FilterPopulation(min: number, max: number, planets: Planet[]): Planet[]{\n    return planets.filter((planet) => planet.population <= max && planet.population >= min && planet.population !== null)\n}","export let background = ['url(https://fwbmatch.fra1.digitaloceanspaces.com/starwars/locations-bg-01.jpg)',\n'url(https://fwbmatch.fra1.digitaloceanspaces.com/starwars/locations-bg-02.jpg)', 'url(https://fwbmatch.fra1.digitaloceanspaces.com/starwars/locations-bg-03.jpg)',\n'url(https://fwbmatch.fra1.digitaloceanspaces.com/starwars/locations-bg-04.jpg)']","import React, { useState, useEffect } from 'react';\nimport { Planet } from './PlanetInterface';\nimport { background } from './Background';\n\n\nexport default function PlanetCard(props: Planet) {\n  const [counter, setCounter] = useState(0);\n  useEffect(\n    () => {\n      const id = setTimeout(() => {\n        setCounter(counter + 1);\n        if (counter === background.length - 1) {\n          setCounter(0)\n        }\n        document.body.style.background = background[counter]\n        document.body.style.backgroundAttachment = 'fixed'\n\n\n      }, 7000);\n      return () => {\n        clearTimeout(id);\n      };\n    },\n    [counter],\n  );\n\n  return (\n\n    <div className=\"card mustafar active\">\n      <header className=\"bg-image\">\n        <img src={props.name.toLowerCase() === 'mustafar' ||\n          props.name.toLowerCase() === 'tatooine' ||\n          props.name.toLowerCase() === 'coruscant' ||\n          props.name.toLowerCase() === 'utapau' ?\n          `https://fwbmatch.fra1.digitaloceanspaces.com/starwars/${props.name.toLowerCase()}.png` :\n          'https://static.wikia.nocookie.net/starwars/images/4/4a/Alderaan.jpg/revision/latest?cb=20061211013805'}\n          alt={props.name} />\n      </header>\n      <main>\n        <div className=\"level\">Population: {props.population === null ? 'unknown' : props.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\n        <div className=\"name\">{props.name}</div>\n        <p className=\"p-mustafar\">Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\n        in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n          est laborum.</p>\n      </main>\n      <footer>\n        <div className=\"left\">\n          <div className=\"title\">Climates:</div>\n          <div className=\"content\">{props.climates.map(climate => <p>{climate}</p>)} </div>\n        </div>\n        <div className=\"middle\">\n          <div className=\"title\">Diameter:</div>\n          <div className=\"content\">{props.diameter === null ? 'unknown' : props.diameter}</div>\n        </div>\n        <div className=\"right\">\n          <div className=\"title\">Gravity:</div>\n          <div className=\"content\">{props.gravity}</div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport SearchName from './SearchName'\nimport FilterPopulation from './FilterPopulation'\nimport PlanetCard from './PlanetCard'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Planet } from './PlanetInterface';\n\n\nexport default function App() {\n  let [planets, setPlanets] = useState<Planet[]>([])\n  let [moreKnown, setMoreKnown] = useState<Boolean>(false)\n  let [moreUnknown, setMoreUnknown] = useState<Boolean>(false)\n  let [min, setMin] = useState<number>(0)\n  let [max, setMax] = useState<number>(1000000000000)\n  let [searchString, setSearchString] = useState<string>('')\n  useEffect(() => {\n    fetch('https://swapi-gql-adform.herokuapp.com/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n      query {\n        allPlanets  {\n          planets {\n            name \n            population\n            gravity\n            diameter\n            climates\n          }\n        }\n      }`\n      }),\n    })\n      .then(res => res.json())\n      .then(res => setPlanets(res.data.allPlanets.planets))\n      .catch(error =>  error )\n  }, []);\n  return (\n    <div >\n      <form className='search'>\n        <TextField label=\"Search for a Planet\" type=\"search\" onChange={event => setSearchString(event.target.value)} />\n        <TextField\n          label=\"Minimum\"\n          type=\"number\"\n          value={min}\n          onChange={event => setMin(parseInt(event.target.value))}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          label=\"Maximum\"\n          type=\"number\"\n          value={max}\n          onChange={event => setMax(parseInt(event.target.value))}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </form>\n\n\n      <div className=\"flying-objects\">\n        <img id=\"flying-object-02\" src=\"https://fwbmatch.fra1.digitaloceanspaces.com/starwars/cloud-02.png\" alt='cloud 1' />\n        <img id=\"flying-object-01\" src=\"https://fwbmatch.fra1.digitaloceanspaces.com/starwars/cloud-01.png\" alt='cloud 2' />\n      </div>\n\n      <h1>There are {SearchName(searchString, FilterPopulation(min, max, planets)).length} Planets with known populations with your Parameters</h1>\n      <div className=\"cards\">\n        {SearchName(searchString, FilterPopulation(min, max, planets))\n          .map((planet) => <PlanetCard\n            name={planet.name}\n            population={planet.population}\n            gravity={planet.gravity}\n            diameter={planet.diameter}\n            climates={planet.climates}\n          />)\n          .splice(0, moreKnown === true ? planets.length : 2)}\n\n      </div>\n      <div className='button'>\n        {(SearchName(searchString, FilterPopulation(min, max, planets)).length > 2) ?\n          <Button\n            className='button'\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={event =>\n              setMoreKnown(!moreKnown)}>Show {moreKnown === true ? 'Less' : `${SearchName(searchString, FilterPopulation(min, max, planets)).length - 2} More Planets`}\n          </Button> : ''}\n      </div>\n\n      <h1>There are {SearchName(searchString, planets.filter((planet) => planet.population === null)).length} Planets with unknown populations with your Parameters</h1>\n      <div className=\"cards\">\n        {SearchName(searchString, planets\n          .filter((planet) => planet.population === null))\n          .map((planet) => <PlanetCard\n            name={planet.name}\n            population={planet.population}\n            gravity={planet.gravity}\n            diameter={planet.diameter}\n            climates={planet.climates}\n          />)\n          .splice(0, moreUnknown === true ? planets.length : 2)}\n      </div>\n      <div className='button'>\n        {SearchName(searchString, planets.filter((planet) => planet.population === null)).length > 2 ?\n          <Button\n            className='button'\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={event =>\n              setMoreUnknown(!moreUnknown)}>Show {moreUnknown === true ? 'Less' : `${SearchName(searchString, planets\n                .filter((planet) => planet.population === null)).length - 2} More Planets`}\n          </Button> : ''}\n      </div>\n\n    </div>\n  )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n\n\n"],"sourceRoot":""}